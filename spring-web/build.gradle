plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.3'
}

ext {
    mybatisVersion = '3.0.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	implementation 'com.google.code.gson:gson'
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"

	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'  // enable auth for spring web apis
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testImplementation 'com.google.code.gson:gson'
	testImplementation 'org.springframework.boot:spring-boot-starter-log4j2'
	testImplementation 'org.springframework.boot:spring-boot-starter-aop'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// do not archive plain-jar(jar \wo dependency)
jar {
	enabled = false
}

/*
 * # clean a specific test result cache before run test
 * gradle test --rerun --tests 'Hello*.hello'
 * # clean all tests result cache before run tests
 * gradle test --rerun-tasks --tests 'Hello*.hello'
 */
test {
	useJUnitPlatform()
	testLogging {
		showStandardStreams = true
		showCauses = true
		showExceptions = true
		showStackTraces = true
		exceptionFormat = 'full'
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}

bootRun {
    environment 'spring.output.ansi.console-available', true
}